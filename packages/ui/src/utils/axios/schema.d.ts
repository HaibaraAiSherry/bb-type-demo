/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/typing-service/account/login': {
    post: operations['loginUsingPOST'];
  };
  '/typing-service/account/refreshToken': {
    post: operations['refreshTokenUsingPOST'];
  };
  '/typing-service/account/register': {
    post: operations['registerUsingPOST'];
  };
  '/typing-service/account/article/getHistoryArticle': {
    get: operations['getArticleByIdUsingGET'];
  };
  '/typing-service/account/history/uploadHistoryAndArticle': {
    post: operations['uploadHistoryAndArticleUsingPOST'];
  };
  '/typing-service/account/match/getPCTljMatchAchByDate': {
    get: operations['getPCTljMatchAchByDateUsingGET'];
  };
  '/typing-service/account/match/today': {
    get: operations['getTodayMatchUsingGET'];
  };
  '/typing-service/account/match/uploadTljMatchAch': {
    post: operations['uploadTljMatchAchUsingPOST'];
  };
  '/typing-service/version/newVersion': {
    get: operations['getNewVersionUsingGET'];
  };
  '/typing-service/account/type/changeNum': {
    post: operations['changeNumUsingPOST'];
  };
  '/typing-service/account/type/history': {
    get: operations['getMyTypeHistoryUsingGET'];
  };
  '/typing-service/account/type/info': {
    get: operations['getMyInfoUsingGET'];
  };
}

export interface components {
  schemas: {
    /** AccountDto */
    AccountDto: {
      /** Format: int32 */
      id?: number;
      password?: string;
      username?: string;
    };
    /** Article */
    Article: {
      content?: string;
      /** Format: int32 */
      id?: number;
      title?: string;
    };
    /** ArticleDto */
    ArticleDto: {
      content?: string;
      /** Format: int32 */
      id?: number;
      title?: string;
    };
    /** Header */
    Header: {
      component?: string;
      key?: string;
      label?: string;
      merge?: boolean;
      /** Format: int32 */
      width?: number;
    };
    /** HistoryArticleDto */
    HistoryArticleDto: {
      articleDto?: components['schemas']['ArticleDto'];
      typeHistoryDto?: components['schemas']['TypeHistoryDto'];
    };
    /** NumDto */
    NumDto: {
      /** Format: int32 */
      dateNum?: number;
      /** Format: int32 */
      misNum?: number;
      /** Format: int32 */
      num?: number;
      numKey?: string;
      /** Format: int32 */
      rightNum?: number;
    };
    /** PageTable«TypeHistoryDto» */
    'PageTable«TypeHistoryDto»': {
      /** Format: int64 */
      current?: number;
      hasNextPage?: boolean;
      hasPreviousPage?: boolean;
      /** Format: int64 */
      pages?: number;
      /** Format: int64 */
      size?: number;
      table?: components['schemas']['Table«TypeHistoryDto»'];
      /** Format: int64 */
      total?: number;
    };
    /** PageTable«TypingHistoryVO» */
    'PageTable«TypingHistoryVO»': {
      /** Format: int64 */
      current?: number;
      hasNextPage?: boolean;
      hasPreviousPage?: boolean;
      /** Format: int64 */
      pages?: number;
      /** Format: int64 */
      size?: number;
      table?: components['schemas']['Table«TypingHistoryVO»'];
      /** Format: int64 */
      total?: number;
    };
    /** Result«Article» */
    'Result«Article»': {
      /** Format: int64 */
      code?: number;
      message?: string;
      result?: components['schemas']['Article'];
    };
    /** Result«NumDto» */
    'Result«NumDto»': {
      /** Format: int64 */
      code?: number;
      message?: string;
      result?: components['schemas']['NumDto'];
    };
    /** Result«PageTable«TypeHistoryDto»» */
    'Result«PageTable«TypeHistoryDto»»': {
      /** Format: int64 */
      code?: number;
      message?: string;
      result?: components['schemas']['PageTable«TypeHistoryDto»'];
    };
    /** Result«PageTable«TypingHistoryVO»» */
    'Result«PageTable«TypingHistoryVO»»': {
      /** Format: int64 */
      code?: number;
      message?: string;
      result?: components['schemas']['PageTable«TypingHistoryVO»'];
    };
    /** Result«TypingMatchVO» */
    'Result«TypingMatchVO»': {
      /** Format: int64 */
      code?: number;
      message?: string;
      result?: components['schemas']['TypingMatchVO'];
    };
    /** Result«TypingUser» */
    'Result«TypingUser»': {
      /** Format: int64 */
      code?: number;
      message?: string;
      result?: components['schemas']['TypingUser'];
    };
    /** Result«TypingVersion» */
    'Result«TypingVersion»': {
      /** Format: int64 */
      code?: number;
      message?: string;
      result?: components['schemas']['TypingVersion'];
    };
    /** Result«string» */
    'Result«string»': {
      /** Format: int64 */
      code?: number;
      message?: string;
      result?: string;
    };
    /** Table«TypeHistoryDto» */
    'Table«TypeHistoryDto»': {
      bodies?: components['schemas']['TypeHistoryDto'][];
      headers?: components['schemas']['Header'][];
    };
    /** Table«TypingHistoryVO» */
    'Table«TypingHistoryVO»': {
      bodies?: components['schemas']['TypingHistoryVO'][];
      headers?: components['schemas']['Header'][];
    };
    /** TypeHistoryDto */
    TypeHistoryDto: {
      /** Format: int32 */
      articleId?: number;
      /** Format: int32 */
      deleteNum?: number;
      /** Format: int32 */
      deleteText?: number;
      /** Format: int32 */
      id?: number;
      /** Format: double */
      keyAccuracy?: number;
      /** Format: double */
      keyLength?: number;
      /** Format: double */
      keyMethod?: number;
      /** Format: double */
      keySpeed?: number;
      /** Format: int32 */
      mistake?: number;
      mobile?: boolean;
      /** Format: int32 */
      number?: number;
      /** Format: int32 */
      paragraph?: number;
      /** Format: int32 */
      repeatNum?: number;
      /** Format: double */
      speed?: number;
      /** Format: double */
      time?: number;
      /** Format: date */
      typeDate?: string;
      /** Format: int32 */
      userId?: number;
      /** Format: double */
      wordRate?: number;
    };
    /** TypingHistory */
    TypingHistory: {
      /** Format: int32 */
      articleId?: number;
      /** Format: int32 */
      deleteNum?: number;
      /** Format: int32 */
      deleteText?: number;
      /** Format: int32 */
      id?: number;
      /** Format: double */
      keyAccuracy?: number;
      /** Format: double */
      keyLength?: number;
      /** Format: double */
      keyMethod?: number;
      /** Format: double */
      keySpeed?: number;
      /** Format: int32 */
      matchType?: number;
      /** Format: int32 */
      mistake?: number;
      mobile?: boolean;
      /** Format: int32 */
      number?: number;
      /** Format: int32 */
      paragraph?: number;
      /** Format: int32 */
      repeatNum?: number;
      /** Format: double */
      speed?: number;
      /** Format: double */
      time?: number;
      /** Format: date-time */
      typeDate?: string;
      /** Format: int32 */
      userId?: number;
      /** Format: double */
      wordRate?: number;
    };
    /** TypingHistoryVO */
    TypingHistoryVO: {
      /** Format: int32 */
      articleId?: number;
      /** Format: int32 */
      deleteNum?: number;
      /** Format: int32 */
      deleteText?: number;
      /** Format: int32 */
      id?: number;
      /** Format: double */
      keyAccuracy?: number;
      /** Format: double */
      keyLength?: number;
      /** Format: double */
      keyMethod?: number;
      /** Format: double */
      keySpeed?: number;
      /** Format: int32 */
      mistake?: number;
      mobile?: boolean;
      mobileCN?: string;
      /** Format: int32 */
      number?: number;
      /** Format: int32 */
      repeatNum?: number;
      /** Format: double */
      speed?: number;
      /** Format: double */
      time?: number;
      /** Format: date */
      typeDate?: string;
      /** Format: int32 */
      userId?: number;
      userName?: string;
      /** Format: double */
      wordRate?: number;
    };
    /** TypingMatchVO */
    TypingMatchVO: {
      article?: components['schemas']['Article'];
      /** Format: int32 */
      articleId?: number;
      author?: string;
      /** Format: date-time */
      holdDate?: string;
      /** Format: int32 */
      id?: number;
      /** Format: int32 */
      matchType?: number;
    };
    /** TypingUser */
    TypingUser: {
      /** Format: int32 */
      dateNum?: number;
      /** Format: int32 */
      id?: number;
      /** Format: date */
      lastLoginDate?: string;
      /** Format: int32 */
      misNum?: number;
      /** Format: int32 */
      num?: number;
      /** Format: date */
      regDate?: string;
      /** Format: int32 */
      rightNum?: number;
    };
    /** TypingVersion */
    TypingVersion: {
      appVersion?: string;
      /** Format: int32 */
      id?: number;
      /** Format: date-time */
      updateDate?: string;
    };
  };
}

export interface operations {
  loginUsingPOST: {
    parameters: {
      header: {
        /** 令牌 */
        Authorization?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['Result«string»'];
        };
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['AccountDto'];
      };
    };
  };
  refreshTokenUsingPOST: {
    parameters: {
      header: {
        /** 令牌 */
        Authorization?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['Result«string»'];
        };
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  registerUsingPOST: {
    parameters: {
      header: {
        /** 令牌 */
        Authorization?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['Result«string»'];
        };
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['AccountDto'];
      };
    };
  };
  getArticleByIdUsingGET: {
    parameters: {
      header: {
        /** 令牌 */
        Authorization?: string;
      };
      query: {
        /** articleId */
        articleId: number;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['Result«Article»'];
        };
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  uploadHistoryAndArticleUsingPOST: {
    parameters: {
      header: {
        /** 令牌 */
        Authorization?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['Result«string»'];
        };
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['HistoryArticleDto'];
      };
    };
  };
  getPCTljMatchAchByDateUsingGET: {
    parameters: {
      header: {
        /** 令牌 */
        Authorization?: string;
      };
      query: {
        /** date */
        date?: string;
        /** matchType */
        matchType?: number;
        /** mobile */
        mobile?: boolean;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['Result«PageTable«TypingHistoryVO»»'];
        };
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  getTodayMatchUsingGET: {
    parameters: {
      header: {
        /** 令牌 */
        Authorization?: string;
      };
      query: {
        /** 是否为手机 */
        mobile: boolean;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['Result«TypingMatchVO»'];
        };
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  uploadTljMatchAchUsingPOST: {
    parameters: {
      header: {
        /** 令牌 */
        Authorization?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['Result«string»'];
        };
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['TypingHistory'];
      };
    };
  };
  getNewVersionUsingGET: {
    parameters: {
      header: {
        /** 令牌 */
        Authorization?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['Result«TypingVersion»'];
        };
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  changeNumUsingPOST: {
    parameters: {
      header: {
        /** 令牌 */
        Authorization?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['Result«NumDto»'];
        };
      };
      /** Created */
      201: unknown;
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
    requestBody: {
      content: {
        'application/json': components['schemas']['NumDto'];
      };
    };
  };
  getMyTypeHistoryUsingGET: {
    parameters: {
      header: {
        /** 令牌 */
        Authorization?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['Result«PageTable«TypeHistoryDto»»'];
        };
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
  getMyInfoUsingGET: {
    parameters: {
      header: {
        /** 令牌 */
        Authorization?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        content: {
          '*/*': components['schemas']['Result«TypingUser»'];
        };
      };
      /** Unauthorized */
      401: unknown;
      /** Forbidden */
      403: unknown;
      /** Not Found */
      404: unknown;
    };
  };
}

export interface external {}
